-- ============================================================================
-- DIAGN√ìSTICO COMPLETO E CORRE√á√ÉO - VENDAS E FRANQUEADAS
-- ============================================================================
-- Execute este arquivo completo no Supabase Dashboard > SQL Editor
-- ============================================================================

RAISE NOTICE 'üîç === INICIANDO DIAGN√ìSTICO === üîç';
RAISE NOTICE '';

-- ============================================================================
-- 1Ô∏è‚É£ VERIFICAR TODAS AS VENDAS
-- ============================================================================
DO $$
DECLARE
  total_vendas INTEGER;
  vendas_com_franqueada INTEGER;
  vendas_sem_franqueada INTEGER;
BEGIN
  SELECT COUNT(*) INTO total_vendas FROM vendas;
  SELECT COUNT(*) INTO vendas_com_franqueada FROM vendas WHERE franqueada_id IS NOT NULL;
  SELECT COUNT(*) INTO vendas_sem_franqueada FROM vendas WHERE franqueada_id IS NULL;
  
  RAISE NOTICE 'üìä TOTAL DE VENDAS: %', total_vendas;
  RAISE NOTICE '   ‚úÖ Com franqueada_id: %', vendas_com_franqueada;
  RAISE NOTICE '   ‚ùå SEM franqueada_id: %', vendas_sem_franqueada;
  RAISE NOTICE '';
END $$;

-- Mostrar √∫ltimas 5 vendas
RAISE NOTICE 'üìã √öLTIMAS 5 VENDAS:';
SELECT 
  v.id,
  v.created_at,
  v.cliente_nome,
  v.valor_total,
  v.franqueada_id,
  v.status_pagamento,
  CASE 
    WHEN v.franqueada_id IS NULL THEN '‚ùå SEM FRANQUEADA'
    ELSE '‚úÖ OK'
  END as status_vinculo
FROM vendas v
ORDER BY v.created_at DESC
LIMIT 5;

RAISE NOTICE '';

-- ============================================================================
-- 2Ô∏è‚É£ VERIFICAR LOJAS E FRANQUEADAS
-- ============================================================================
DO $$
DECLARE
  total_lojas INTEGER;
  lojas_com_franqueada INTEGER;
  franqueadas_sem_user_id INTEGER;
BEGIN
  SELECT COUNT(*) INTO total_lojas FROM lojas;
  SELECT COUNT(*) INTO lojas_com_franqueada FROM lojas WHERE franqueada_id IS NOT NULL;
  SELECT COUNT(*) INTO franqueadas_sem_user_id FROM franqueadas WHERE user_id IS NULL;
  
  RAISE NOTICE 'üè™ LOJAS:';
  RAISE NOTICE '   Total: %', total_lojas;
  RAISE NOTICE '   Com franqueada vinculada: %', lojas_com_franqueada;
  RAISE NOTICE '';
  RAISE NOTICE 'üë• FRANQUEADAS:';
  RAISE NOTICE '   ‚ö†Ô∏è SEM user_id (PROBLEMA!): %', franqueadas_sem_user_id;
  RAISE NOTICE '';
END $$;

-- Mostrar lojas e suas franqueadas
RAISE NOTICE 'üìã LOJAS E FRANQUEADAS:';
SELECT 
  l.nome as loja,
  l.dominio,
  f.nome as franqueada_nome,
  f.email as franqueada_email,
  f.user_id,
  CASE 
    WHEN f.user_id IS NULL THEN '‚ùå SEM USER_ID (PROBLEMA!)'
    ELSE '‚úÖ OK'
  END as status
FROM lojas l
LEFT JOIN franqueadas f ON l.franqueada_id = f.id
ORDER BY l.created_at DESC
LIMIT 5;

RAISE NOTICE '';

-- ============================================================================
-- 3Ô∏è‚É£ CORRIGIR VENDAS SEM FRANQUEADA_ID
-- ============================================================================
RAISE NOTICE 'üîß === INICIANDO CORRE√á√ÉO === üîß';
RAISE NOTICE '';

-- Atualizar vendas que n√£o t√™m franqueada_id
UPDATE vendas v
SET franqueada_id = f.user_id
FROM lojas l
JOIN franqueadas f ON l.franqueada_id = f.id
WHERE v.loja_id = l.id
AND v.franqueada_id IS NULL
AND f.user_id IS NOT NULL;

-- Verificar resultado
DO $$
DECLARE
  vendas_corrigidas INTEGER;
  vendas_ainda_sem INTEGER;
BEGIN
  SELECT COUNT(*) INTO vendas_corrigidas FROM vendas WHERE franqueada_id IS NOT NULL;
  SELECT COUNT(*) INTO vendas_ainda_sem FROM vendas WHERE franqueada_id IS NULL;
  
  RAISE NOTICE '‚úÖ Vendas com franqueada_id: %', vendas_corrigidas;
  RAISE NOTICE '‚ö†Ô∏è Vendas ainda sem franqueada_id: %', vendas_ainda_sem;
  
  IF vendas_ainda_sem > 0 THEN
    RAISE NOTICE '';
    RAISE NOTICE '‚ö†Ô∏è ATEN√á√ÉO: Ainda existem vendas sem franqueada_id!';
    RAISE NOTICE 'Motivo prov√°vel: franqueada n√£o tem user_id definido';
    RAISE NOTICE 'V√° em /admin/franqueadas e crie o usu√°rio Auth';
  END IF;
END $$;

RAISE NOTICE '';

-- ============================================================================
-- 4Ô∏è‚É£ VERIFICA√á√ÉO FINAL
-- ============================================================================
RAISE NOTICE '‚úÖ === VERIFICA√á√ÉO FINAL === ‚úÖ';
RAISE NOTICE '';

-- Vendas com dados completos
SELECT 
  v.id,
  v.created_at::date as data,
  v.cliente_nome,
  v.valor_total,
  l.nome as loja,
  f.nome as franqueada,
  f.email as franqueada_email,
  CASE 
    WHEN v.franqueada_id IS NOT NULL AND f.user_id IS NOT NULL THEN '‚úÖ TUDO OK'
    WHEN v.franqueada_id IS NULL THEN '‚ùå SEM FRANQUEADA_ID'
    WHEN f.user_id IS NULL THEN '‚ö†Ô∏è FRANQUEADA SEM USER_ID'
    ELSE '‚ùì PROBLEMA DESCONHECIDO'
  END as status_completo
FROM vendas v
LEFT JOIN lojas l ON v.loja_id = l.id
LEFT JOIN franqueadas f ON v.franqueada_id = f.user_id
ORDER BY v.created_at DESC
LIMIT 10;

RAISE NOTICE '';
RAISE NOTICE 'üéâ === DIAGN√ìSTICO E CORRE√á√ÉO CONCLU√çDOS === üéâ';
RAISE NOTICE '';
RAISE NOTICE 'üìù Pr√≥ximos passos:';
RAISE NOTICE '1. Verifique se ainda h√° vendas sem franqueada_id';
RAISE NOTICE '2. Se sim, certifique-se que a franqueada tem user_id no Supabase Auth';
RAISE NOTICE '3. Teste criar uma nova venda';
RAISE NOTICE '4. Acesse /franqueada/comissoes para ver as vendas';
RAISE NOTICE '5. Acesse /admin/comissoes para ver todas as vendas';
